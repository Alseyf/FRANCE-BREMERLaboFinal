'------------------------------------------------------------------------------
' <auto-generated>
'     Ce code a été généré par un outil.
'     Version du runtime :4.0.30319.42000
'
'     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
'     le code est régénéré.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace ServiceReference1
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="ServiceReference1.IService1")>  _
    Public Interface IService1
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetListFilmsByIdActor", ReplyAction:="http://tempuri.org/IService1/GetListFilmsByIdActorResponse")>  _
        Function GetListFilmsByIdActor(ByVal id As Integer) As DTO.FilmDTO()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetListFilmsByIdActor", ReplyAction:="http://tempuri.org/IService1/GetListFilmsByIdActorResponse")>  _
        Function GetListFilmsByIdActorAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of DTO.FilmDTO())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetListCharacterByIdActorAndIdFilm", ReplyAction:="http://tempuri.org/IService1/GetListCharacterByIdActorAndIdFilmResponse")>  _
        Function GetListCharacterByIdActorAndIdFilm(ByVal idAct As Integer, ByVal idFilm As Integer) As DTO.CharacterDTO()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetListCharacterByIdActorAndIdFilm", ReplyAction:="http://tempuri.org/IService1/GetListCharacterByIdActorAndIdFilmResponse")>  _
        Function GetListCharacterByIdActorAndIdFilmAsync(ByVal idAct As Integer, ByVal idFilm As Integer) As System.Threading.Tasks.Task(Of DTO.CharacterDTO())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/FindListFilmByPartialActorName", ReplyAction:="http://tempuri.org/IService1/FindListFilmByPartialActorNameResponse")>  _
        Function FindListFilmByPartialActorName(ByVal s As String) As DTO.FilmDTO()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/FindListFilmByPartialActorName", ReplyAction:="http://tempuri.org/IService1/FindListFilmByPartialActorNameResponse")>  _
        Function FindListFilmByPartialActorNameAsync(ByVal s As String) As System.Threading.Tasks.Task(Of DTO.FilmDTO())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetFavoriteFilms", ReplyAction:="http://tempuri.org/IService1/GetFavoriteFilmsResponse")>  _
        Function GetFavoriteFilms() As DTO.LightFilmDTO()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetFavoriteFilms", ReplyAction:="http://tempuri.org/IService1/GetFavoriteFilmsResponse")>  _
        Function GetFavoriteFilmsAsync() As System.Threading.Tasks.Task(Of DTO.LightFilmDTO())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetFullActorDetailsByIdActor", ReplyAction:="http://tempuri.org/IService1/GetFullActorDetailsByIdActorResponse")>  _
        Function GetFullActorDetailsByIdActor(ByVal id As Integer) As DTO.FullActorDTO
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetFullActorDetailsByIdActor", ReplyAction:="http://tempuri.org/IService1/GetFullActorDetailsByIdActorResponse")>  _
        Function GetFullActorDetailsByIdActorAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of DTO.FullActorDTO)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/InsertCommentOnActorId", ReplyAction:="http://tempuri.org/IService1/InsertCommentOnActorIdResponse")>  _
        Function InsertCommentOnActorId(ByVal id As Integer, ByVal commDTO As DTO.CommentDTO) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/InsertCommentOnActorId", ReplyAction:="http://tempuri.org/IService1/InsertCommentOnActorIdResponse")>  _
        Function InsertCommentOnActorIdAsync(ByVal id As Integer, ByVal commDTO As DTO.CommentDTO) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetFullActor", ReplyAction:="http://tempuri.org/IService1/GetFullActorResponse")>  _
        Function GetFullActor(ByVal limite As Integer) As DTO.FullActorDTO()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetFullActor", ReplyAction:="http://tempuri.org/IService1/GetFullActorResponse")>  _
        Function GetFullActorAsync(ByVal limite As Integer) As System.Threading.Tasks.Task(Of DTO.FullActorDTO())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetComments", ReplyAction:="http://tempuri.org/IService1/GetCommentsResponse")>  _
        Function GetComments(ByVal id As Integer) As DTO.CommentDTO()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetComments", ReplyAction:="http://tempuri.org/IService1/GetCommentsResponse")>  _
        Function GetCommentsAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of DTO.CommentDTO())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/FindActorByPartialName", ReplyAction:="http://tempuri.org/IService1/FindActorByPartialNameResponse")>  _
        Function FindActorByPartialName(ByVal s As String, ByVal limite As Integer) As DTO.FullActorDTO()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/FindActorByPartialName", ReplyAction:="http://tempuri.org/IService1/FindActorByPartialNameResponse")>  _
        Function FindActorByPartialNameAsync(ByVal s As String, ByVal limite As Integer) As System.Threading.Tasks.Task(Of DTO.FullActorDTO())
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IService1Channel
        Inherits ServiceReference1.IService1, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class Service1Client
        Inherits System.ServiceModel.ClientBase(Of ServiceReference1.IService1)
        Implements ServiceReference1.IService1
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function GetListFilmsByIdActor(ByVal id As Integer) As DTO.FilmDTO() Implements ServiceReference1.IService1.GetListFilmsByIdActor
            Return MyBase.Channel.GetListFilmsByIdActor(id)
        End Function
        
        Public Function GetListFilmsByIdActorAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of DTO.FilmDTO()) Implements ServiceReference1.IService1.GetListFilmsByIdActorAsync
            Return MyBase.Channel.GetListFilmsByIdActorAsync(id)
        End Function
        
        Public Function GetListCharacterByIdActorAndIdFilm(ByVal idAct As Integer, ByVal idFilm As Integer) As DTO.CharacterDTO() Implements ServiceReference1.IService1.GetListCharacterByIdActorAndIdFilm
            Return MyBase.Channel.GetListCharacterByIdActorAndIdFilm(idAct, idFilm)
        End Function
        
        Public Function GetListCharacterByIdActorAndIdFilmAsync(ByVal idAct As Integer, ByVal idFilm As Integer) As System.Threading.Tasks.Task(Of DTO.CharacterDTO()) Implements ServiceReference1.IService1.GetListCharacterByIdActorAndIdFilmAsync
            Return MyBase.Channel.GetListCharacterByIdActorAndIdFilmAsync(idAct, idFilm)
        End Function
        
        Public Function FindListFilmByPartialActorName(ByVal s As String) As DTO.FilmDTO() Implements ServiceReference1.IService1.FindListFilmByPartialActorName
            Return MyBase.Channel.FindListFilmByPartialActorName(s)
        End Function
        
        Public Function FindListFilmByPartialActorNameAsync(ByVal s As String) As System.Threading.Tasks.Task(Of DTO.FilmDTO()) Implements ServiceReference1.IService1.FindListFilmByPartialActorNameAsync
            Return MyBase.Channel.FindListFilmByPartialActorNameAsync(s)
        End Function
        
        Public Function GetFavoriteFilms() As DTO.LightFilmDTO() Implements ServiceReference1.IService1.GetFavoriteFilms
            Return MyBase.Channel.GetFavoriteFilms
        End Function
        
        Public Function GetFavoriteFilmsAsync() As System.Threading.Tasks.Task(Of DTO.LightFilmDTO()) Implements ServiceReference1.IService1.GetFavoriteFilmsAsync
            Return MyBase.Channel.GetFavoriteFilmsAsync
        End Function
        
        Public Function GetFullActorDetailsByIdActor(ByVal id As Integer) As DTO.FullActorDTO Implements ServiceReference1.IService1.GetFullActorDetailsByIdActor
            Return MyBase.Channel.GetFullActorDetailsByIdActor(id)
        End Function
        
        Public Function GetFullActorDetailsByIdActorAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of DTO.FullActorDTO) Implements ServiceReference1.IService1.GetFullActorDetailsByIdActorAsync
            Return MyBase.Channel.GetFullActorDetailsByIdActorAsync(id)
        End Function
        
        Public Function InsertCommentOnActorId(ByVal id As Integer, ByVal commDTO As DTO.CommentDTO) As Boolean Implements ServiceReference1.IService1.InsertCommentOnActorId
            Return MyBase.Channel.InsertCommentOnActorId(id, commDTO)
        End Function
        
        Public Function InsertCommentOnActorIdAsync(ByVal id As Integer, ByVal commDTO As DTO.CommentDTO) As System.Threading.Tasks.Task(Of Boolean) Implements ServiceReference1.IService1.InsertCommentOnActorIdAsync
            Return MyBase.Channel.InsertCommentOnActorIdAsync(id, commDTO)
        End Function
        
        Public Function GetFullActor(ByVal limite As Integer) As DTO.FullActorDTO() Implements ServiceReference1.IService1.GetFullActor
            Return MyBase.Channel.GetFullActor(limite)
        End Function
        
        Public Function GetFullActorAsync(ByVal limite As Integer) As System.Threading.Tasks.Task(Of DTO.FullActorDTO()) Implements ServiceReference1.IService1.GetFullActorAsync
            Return MyBase.Channel.GetFullActorAsync(limite)
        End Function
        
        Public Function GetComments(ByVal id As Integer) As DTO.CommentDTO() Implements ServiceReference1.IService1.GetComments
            Return MyBase.Channel.GetComments(id)
        End Function
        
        Public Function GetCommentsAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of DTO.CommentDTO()) Implements ServiceReference1.IService1.GetCommentsAsync
            Return MyBase.Channel.GetCommentsAsync(id)
        End Function
        
        Public Function FindActorByPartialName(ByVal s As String, ByVal limite As Integer) As DTO.FullActorDTO() Implements ServiceReference1.IService1.FindActorByPartialName
            Return MyBase.Channel.FindActorByPartialName(s, limite)
        End Function
        
        Public Function FindActorByPartialNameAsync(ByVal s As String, ByVal limite As Integer) As System.Threading.Tasks.Task(Of DTO.FullActorDTO()) Implements ServiceReference1.IService1.FindActorByPartialNameAsync
            Return MyBase.Channel.FindActorByPartialNameAsync(s, limite)
        End Function
    End Class
End Namespace
